package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import service.ProductService;
import service.Service;


public class ProdcutController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private Service svc; 
    //생성자
    public ProdcutController() {
        // TODO Auto-generated constructor stub
    	svc = new ProductService();
    }

	
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		// 주 작업 영역
		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html; charset=utf-8");
		
		String uri = req.getRequestURI(); // 전체 요청 경로(원하는 서비스?)
		System.out.println(">>> uri : " + uri);
		String context = req.getContextPath(); // 프로젝트 명
		System.out.println(">>> context :" + context);
		String path = uri.substring(context.length());
		System.out.println(">>> path : " +  path); // 서비스 요청 경로
		
		String destPage = "";
		if (path.equals("/product/register.pd")) {
			destPage = "/product/register.jsp";
		}
		RequestDispatcher rdp = req.getRequestDispatcher(destPage);
		rdp.forward(req, res);
	}

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// get방식으로 오는 값을 체킹
		//response.getWriter().append("Served at: ").append(request.getContextPath());
		service(request, response);
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// post 방식으로 오는 값을 체킹
//		doGet(request, response);
		service(request, response);
	}

}
